{\rtf1\ansi\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs32\lang9 Strings & Lists\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Palindrome Checker: Write a function that checks if a given string is a palindrome.\par
{\pntext\f0 2.\tab}Anagram Detector: Write a function to check if two strings are anagrams.\par
{\pntext\f0 3.\tab}Reverse Words: Reverse the words in a given sentence.\par
{\pntext\f0 4.\tab}Unique Characters: Write a function to determine if a string has all unique characters.\par
{\pntext\f0 5.\tab}Compress String: Implement a method to perform basic string compression using the counts of repeated characters.\par
{\pntext\f0 6.\tab}Vowel Counter: Count the number of vowels in a given string.\par
{\pntext\f0 7.\tab}String Rotation: Check if one string is a rotation of another using only one call to a substring method.\par
{\pntext\f0 8.\tab}Longest Word: Find the longest word in a given sentence.\par
{\pntext\f0 9.\tab}Character Frequency: Count the frequency of each character in a string.\par
{\pntext\f0 10.\tab}Remove Duplicates: Remove duplicate elements from a list.\par
{\pntext\f0 11.\tab}Rotate List: Rotate a list to the left by n positions.\par
{\pntext\f0 12.\tab}Merge Lists: Merge two sorted lists into one sorted list.\par
{\pntext\f0 13.\tab}Matrix Diagonal Sum: Calculate the sum of diagonals in a matrix.\par
{\pntext\f0 14.\tab}Flatten List: Flatten a nested list.\par
{\pntext\f0 15.\tab}List Intersection: Find the intersection of two lists.\par
{\pntext\f0 16.\tab}Common Elements: Find common elements between two lists.\par
{\pntext\f0 17.\tab}Sublist Finder: Write a function to find if a list is a sublist of another list.\par
{\pntext\f0 18.\tab}List Rotation Checker: Check if one list is a rotation of another.\par
{\pntext\f0 19.\tab}Sort by Length: Sort a list of strings based on their lengths.\par
{\pntext\f0 20.\tab}List to String: Convert a list of characters into a string.\par

\pard\sa200\sl276\slmult1\b\fs32 Numbers & Math\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0\fs22 Fibonacci Sequence: Generate the first n numbers of the Fibonacci sequence.\par
{\pntext\f0 2.\tab}Prime Number Checker: Check if a given number is prime.\par
{\pntext\f0 3.\tab}GCD Finder: Find the greatest common divisor (GCD) of two numbers using recursion.\par
{\pntext\f0 4.\tab}LCM Finder: Find the least common multiple (LCM) of two numbers.\par
{\pntext\f0 5.\tab}Sum of Digits: Calculate the sum of the digits of a number.\par
{\pntext\f0 6.\tab}Factorial Calculator: Calculate the factorial of a number using recursion.\par
{\pntext\f0 7.\tab}Number Reversal: Reverse the digits of an integer.\par
{\pntext\f0 8.\tab}Armstrong Number: Check if a number is an Armstrong number.\par
{\pntext\f0 9.\tab}Perfect Number: Check if a number is a perfect number.\par
{\pntext\f0 10.\tab}Decimal to Binary: Convert a decimal number to binary.\par
{\pntext\f0 11.\tab}Binary to Decimal: Convert a binary number to decimal.\par
{\pntext\f0 12.\tab}Count Divisors: Count the number of divisors of a given number.\par
{\pntext\f0 13.\tab}Sum of Squares: Calculate the sum of squares of the first n natural numbers.\par
{\pntext\f0 14.\tab}Sum of Primes: Calculate the sum of all prime numbers up to n.\par
{\pntext\f0 15.\tab}Square Root Calculator: Implement a function to calculate the square root of a number.\par
{\pntext\f0 16.\tab}Random Number Generator: Generate a random number between two given numbers.\par
{\pntext\f0 17.\tab}Find Factors: Find all factors of a given number.\par
{\pntext\f0 18.\tab}Power Calculation: Calculate the power of a number using recursion.\par
{\pntext\f0 19.\tab}Palindrome Number: Check if a given number is a palindrome.\par
{\pntext\f0 20.\tab}N-th Fibonacci: Find the n-th Fibonacci number using dynamic programming.\par

\pard\sa200\sl276\slmult1\b\fs32 Loops & Recursion\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Factorial Using Loop: Calculate the factorial of a number using loops.\par
{\pntext\f0 2.\tab}Sum of Natural Numbers: Calculate the sum of the first n natural numbers using loops.\par
{\pntext\f0 3.\tab}Pattern Printing: Print different patterns like pyramids and diamonds using loops.\par
{\pntext\f0 4.\tab}Fibonacci Using Loop: Generate the Fibonacci sequence using loops.\par
{\pntext\f0 5.\tab}Multiplication Table: Generate the multiplication table for a given number.\par
{\pntext\f0 6.\tab}Countdown Timer: Create a countdown timer using a loop.\par
{\pntext\f0 7.\tab}Prime Numbers in Range: Find all prime numbers within a given range using loops.\par
{\pntext\f0 8.\tab}Recursive Sum: Find the sum of a list using recursion.\par
{\pntext\f0 9.\tab}Factorial Sum: Find the sum of the factorials of the digits of a number.\par
{\pntext\f0 10.\tab}Hailstone Sequence: Generate the hailstone sequence for a given number.\par
{\pntext\f0 11.\tab}File Handling\par
{\pntext\f0 12.\tab}File Reader: Write a function to read a file and print its contents.\par
{\pntext\f0 13.\tab}Word Counter: Count the number of words in a text file.\par
{\pntext\f0 14.\tab}Line Counter: Count the number of lines in a text file.\par
{\pntext\f0 15.\tab}Find and Replace: Implement find-and-replace functionality in a text file.\par
{\pntext\f0 16.\tab}File Merger: Merge the contents of two text files into a third file.\par
{\pntext\f0 17.\tab}CSV Reader: Write a function to read and process a CSV file.\par
{\pntext\f0 18.\tab}File Copy: Write a program to copy the contents of one file to another.\par
{\pntext\f0 19.\tab}File Encryption: Write a simple file encryption and decryption program.\par
{\pntext\f0 20.\tab}Log Analyzer: Parse and analyze a log file for specific events.\par
{\pntext\f0 21.\tab}File Sorter: Sort the lines in a text file alphabetically.\par

\pard\sa200\sl276\slmult1\b\fs32 Data Structures\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Stack Implementation: Implement a stack using a list.\par
{\pntext\f0 2.\tab}Queue Implementation: Implement a queue using a list.\par
{\pntext\f0 3.\tab}Linked List Implementation: Implement a singly linked list.\par
{\pntext\f0 4.\tab}Binary Search Tree: Implement a binary search tree and perform operations like insert, delete, and search.\par
{\pntext\f0 5.\tab}Graph Representation: Represent a graph using an adjacency list.\par
{\pntext\f0 6.\tab}DFS and BFS: Implement Depth-First Search and Breadth-First Search on a graph.\par
{\pntext\f0 7.\tab}Balanced Parentheses: Check if a string has balanced parentheses using a stack.\par
{\pntext\f0 8.\tab}Palindrome Linked List: Check if a linked list is a palindrome.\par
{\pntext\f0 9.\tab}Circular Queue: Implement a circular queue.\par
{\pntext\f0 10.\tab}Hash Table Implementation: Implement a simple hash table.\par

\pard\sa200\sl276\slmult1\b\fs32 Algorithms\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Binary Search: Implement binary search on a sorted list.\par
{\pntext\f0 2.\tab}Bubble Sort: Implement bubble sort on a list of numbers.\par
{\pntext\f0 3.\tab}Selection Sort: Implement selection sort on a list of numbers.\par
{\pntext\f0 4.\tab}Insertion Sort: Implement insertion sort on a list of numbers.\par
{\pntext\f0 5.\tab}Merge Sort: Implement merge sort on a list of numbers.\par
{\pntext\f0 6.\tab}Quick Sort: Implement quick sort on a list of numbers.\par
{\pntext\f0 7.\tab}Longest Increasing Subsequence: Find the longest increasing subsequence in a list.\par
{\pntext\f0 8.\tab}Knapsack Problem: Solve the 0/1 knapsack problem using dynamic programming.\par
{\pntext\f0 9.\tab}Dijkstra's Algorithm: Implement Dijkstra's algorithm for shortest path in a graph.\par
{\pntext\f0 10.\tab}Sudoku Solver: Implement a Sudoku solver using backtracking.\par

\pard\sa200\sl276\slmult1\b\fs32 Object-Oriented Programming\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Class for Complex Numbers: Create a class to represent complex numbers and perform basic operations like addition and multiplication.\par
{\pntext\f0 2.\tab}Bank Account Class: Create a class for a bank account that supports deposit, withdrawal, and balance checking.\par
{\pntext\f0 3.\tab}Inheritance Example: Implement a base class and derived class with inheritance.\par
{\pntext\f0 4.\tab}Polymorphism Example: Implement a function that demonstrates polymorphism.\par
{\pntext\f0 5.\tab}Abstract Base Class: Implement an abstract base class and derive classes from it.\par
{\pntext\f0 6.\tab}Car Class: Create a class representing a car with methods for starting, stopping, and accelerating.\par
{\pntext\f0 7.\tab}Shopping Cart: Create a class for a shopping cart that can add, remove items, and calculate the total price.\par
{\pntext\f0 8.\tab}Library System: Implement a simple library system with classes for books, members, and transactions.\par
{\pntext\f0 9.\tab}Employee Management: Create classes to manage employee records, including adding, removing, and updating information.\par
{\pntext\f0 10.\tab}Shape Area Calculator: Create a base class for shapes and derive classes for specific shapes like circle, rectangle, etc., to calculate the area.\par

\pard\sa200\sl276\slmult1\b\fs32 Miscellaneous\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Caesar Cipher: Implement a Caesar cipher for encryption and decryption.\par
{\pntext\f0 2.\tab}Hangman Game: Create a simple Hangman game.\par
{\pntext\f0 3.\tab}Tic-Tac-Toe Game: Implement a Tic-Tac-Toe game.\par
{\pntext\f0 4.\tab}Random Password Generator: Write a function to generate a random password.\par
{\pntext\f0 5.\tab}Text-Based Adventure Game: Create a simple text-based adventure game.\par
{\pntext\f0 6.\tab}Sudoku Validator: Validate if a given Sudoku board is valid.\par
{\pntext\f0 7.\tab}Prime Factorization: Find the prime factorization of a number.\par
{\pntext\f0 8.\tab}Snake Game: Create a simple Snake game using Python.\par
{\pntext\f0 9.\tab}Minesweeper Game: Implement the Minesweeper game logic.\par
{\pntext\f0 10.\tab}Simple Chatbot: Create a simple rule-based chatbot.\par
}
 