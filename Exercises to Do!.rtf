{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs28\lang9 Basic Exercises (1-20)\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1\b0\strike\fs22 Sum of Two Numbers: Write a program that takes two numbers as input and returns their sum.\strike0\par
{\pntext\f0 2.\tab}\strike Odd or Even: Write a program to check whether a given number is odd or even.\par
{\pntext\f0 3.\tab} Largest of Three Numbers: Find the largest of three numbers provided by the user.\par
{\pntext\f0 4.\tab}Leap Year: Check if a given year is a leap year.\par
{\pntext\f0 5.\tab}Factorial: Write a function to compute the factorial of a number.\par
{\pntext\f0 6.\tab}Palindrome: Check if a given string is a palindrome.\par
{\pntext\f0 7.\tab}Fibonacci Sequence: Generate the first N terms of the Fibonacci sequence.\par
{\pntext\f0 8.\tab}Sum of Digits: Write a program to calculate the sum of digits of a number.\par
{\pntext\f0 9.\tab}Reverse a String: Reverse a given string.\par
{\pntext\f0 10.\tab}Prime Number Check: Check if a number is prime.\par
{\pntext\f0 11.\tab}Counting Vowels: Count the number of vowels in a string.\par
{\pntext\f0 12.\tab}GCD of Two Numbers: Find the greatest common divisor (GCD) of two numbers.\par
{\pntext\f0 13.\tab}LCM of Two Numbers: Find the least common multiple (LCM) of two numbers.\par
{\pntext\f0 14.\tab}Armstrong Number: Check if a number is an Armstrong number.\par
{\pntext\f0 15.\tab}ASCII Value: Find the ASCII value of a character.\par
{\pntext\f0 16.\tab}Swap Two Variables: Swap the values of two variables without using a third variable.\par
{\pntext\f0 17.\tab}Simple Interest: Calculate simple interest based on user input.\par
{\pntext\f0 18.\tab}Quadratic Equation: Solve a quadratic equation based on user input.\par
{\pntext\f0 19.\tab}Sum of First N Natural Numbers: Calculate the sum of the first N natural numbers.\par
{\pntext\f0 20.\tab}Decimal to Binary Conversion: Convert a decimal number to binary.\par

\pard\sa200\sl276\slmult1\b\strike0\fs28 Array and String Manipulation (21-40)\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Array Reversal: Reverse the elements of an array.\par
{\pntext\f0 2.\tab}Find Largest Element in Array: Find the largest element in a list.\par
{\pntext\f0 3.\tab}Remove Duplicates from List: Remove duplicate elements from a list.\par
{\pntext\f0 4.\tab}Count Occurrences: Count the number of occurrences of a specific element in a list.\par
{\pntext\f0 5.\tab}Merge Two Lists: Merge two sorted lists into one sorted list.\par
{\pntext\f0 6.\tab}Find Second Largest Element: Find the second largest element in a list.\par
{\pntext\f0 7.\tab}Rotate List: Rotate the elements of a list to the right by K positions.\par
{\pntext\f0 8.\tab}Check for Anagrams: Check if two strings are anagrams.\par
{\pntext\f0 9.\tab}Matrix Addition: Perform matrix addition on two matrices.\par
{\pntext\f0 10.\tab}Matrix Multiplication: Perform matrix multiplication on two matrices.\par
{\pntext\f0 11.\tab}Transpose of a Matrix: Find the transpose of a matrix.\par
{\pntext\f0 12.\tab}Frequency of Characters: Find the frequency of each character in a string.\par
{\pntext\f0 13.\tab}Find Substring: Check if a string contains a specific substring.\par
{\pntext\f0 14.\tab}String Rotation: Check if one string is a rotation of another string.\par
{\pntext\f0 15.\tab}Longest Word in String: Find the longest word in a given string.\par
{\pntext\f0 16.\tab}Replace Vowels: Replace all vowels in a string with a specific character.\par
{\pntext\f0 17.\tab}Word Count: Count the number of words in a sentence.\par
{\pntext\f0 18.\tab}Character Occurrence in String: Count the occurrences of a specific character in a string.\par
{\pntext\f0 19.\tab}Remove Specific Element: Remove a specific element from a list.\par
{\pntext\f0 20.\tab}Move Zeros to End: Move all zeros in a list to the end while maintaining the order of other elements.\par

\pard\sa200\sl276\slmult1\b\fs28 Conditional and Looping Problems (41-60)\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Number Guessing Game: Create a simple number guessing game.\par
{\pntext\f0 2.\tab}Floyd's Triangle: Print Floyd's triangle using nested loops.\par
{\pntext\f0 3.\tab}Pascal's Triangle: Print Pascal's triangle using nested loops.\par
{\pntext\f0 4.\tab}Sum of Even Numbers: Find the sum of all even numbers up to N.\par
{\pntext\f0 5.\tab}Pattern Printing: Print a pyramid pattern of stars.\par
{\pntext\f0 6.\tab}Diamond Shape Printing: Print a diamond shape pattern of stars.\par
{\pntext\f0 7.\tab}Count Factors: Count the number of factors of a given number.\par
{\pntext\f0 8.\tab}Check Perfect Number: Check if a number is a perfect number.\par
{\pntext\f0 9.\tab}Check for Armstrong Number in Range: Find all Armstrong numbers in a given range.\par
{\pntext\f0 10.\tab}Multiplication Table: Print the multiplication table for a given number.\par
{\pntext\f0 11.\tab}Sum of Squares: Calculate the sum of squares of the first N natural numbers.\par
{\pntext\f0 12.\tab}Power Calculation: Calculate the power of a number without using the built-in function.\par
{\pntext\f0 13.\tab}Prime Numbers in Range: Find all prime numbers in a given range.\par
{\pntext\f0 14.\tab}Sum of Prime Numbers: Calculate the sum of all prime numbers up to N.\par
{\pntext\f0 15.\tab}Number Pattern: Print a number pattern (e.g., 1, 12, 123, ...).\par
{\pntext\f0 16.\tab}Hollow Square Pattern: Print a hollow square pattern using asterisks.\par
{\pntext\f0 17.\tab}Right-Angle Triangle Pattern: Print a right-angle triangle pattern using numbers.\par
{\pntext\f0 18.\tab}Pyramid Pattern with Numbers: Print a pyramid pattern using numbers.\par
{\pntext\f0 19.\tab}Counting Alphabetic Characters: Count the number of alphabetic characters in a string.\par
{\pntext\f0 20.\tab}Palindrome Number Check: Check if a number is a palindrome.\par

\pard\sa200\sl276\slmult1\b\fs28 Functions and Recursion (61-80)\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Recursive Factorial: Write a recursive function to compute the factorial of a number.\par
{\pntext\f0 2.\tab}Recursive Fibonacci: Write a recursive function to generate the Fibonacci sequence.\par
{\pntext\f0 3.\tab}Tower of Hanoi: Implement the Tower of Hanoi problem.\par
{\pntext\f0 4.\tab}Recursive Sum of Digits: Write a recursive function to find the sum of digits of a number.\par
{\pntext\f0 5.\tab}Binary Search: Implement a binary search algorithm.\par
{\pntext\f0 6.\tab}Linear Search: Implement a linear search algorithm.\par
{\pntext\f0 7.\tab}Insertion Sort: Implement insertion sort.\par
{\pntext\f0 8.\tab}Bubble Sort: Implement bubble sort.\par
{\pntext\f0 9.\tab}Merge Sort: Implement merge sort using recursion.\par
{\pntext\f0 10.\tab}Quick Sort: Implement quicksort using recursion.\par
{\pntext\f0 11.\tab}Check Palindrome Recursively: Check if a string is a palindrome using recursion.\par
{\pntext\f0 12.\tab}Power Function (Recursive): Write a recursive function to compute the power of a number.\par
{\pntext\f0 13.\tab}GCD (Recursive): Write a recursive function to find the GCD of two numbers.\par
{\pntext\f0 14.\tab}LCM (Recursive): Write a recursive function to find the LCM of two numbers.\par
{\pntext\f0 15.\tab}Reverse String (Recursive): Write a recursive function to reverse a string.\par
{\pntext\f0 16.\tab}Sum of Array Elements (Recursive): Write a recursive function to find the sum of all elements in an array.\par
{\pntext\f0 17.\tab}Check Sorted Array (Recursive): Write a recursive function to check if an array is sorted.\par
{\pntext\f0 18.\tab}Generate Subsets: Write a function to generate all subsets of a set.\par
{\pntext\f0 19.\tab}Permutations of a String: Write a function to generate all permutations of a string.\par
{\pntext\f0 20.\tab}Combination Sum: Write a function to find all combinations that sum up to a target value.\par

\pard\sa200\sl276\slmult1\b\fs28 Advanced Topics and Challenges (81-100)\b0\fs22\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Palindrome Partitioning: Partition a string into all possible palindromic substrings.\par
{\pntext\f0 2.\tab}Sudoku Solver: Implement a Sudoku solver.\par
{\pntext\f0 3.\tab}N-Queens Problem: Solve the N-Queens problem.\par
{\pntext\f0 4.\tab}Knight's Tour: Implement the Knight's Tour problem.\par
{\pntext\f0 5.\tab}Rat in a Maze: Solve the Rat in a Maze problem using backtracking.\par
{\pntext\f0 6.\tab}Coin Change Problem: Implement the coin change problem using dynamic programming.\par
{\pntext\f0 7.\tab}Longest Common Subsequence: Find the longest common subsequence between two strings.\par
{\pntext\f0 8.\tab}Longest Increasing Subsequence: Find the longest increasing subsequence in an array.\par
{\pntext\f0 9.\tab}Edit Distance: Implement the edit distance algorithm.\par
{\pntext\f0 10.\tab}Maximum Subarray: Find the maximum sum subarray using Kadane's algorithm.\par
{\pntext\f0 11.\tab}Binary Tree Inorder Traversal: Implement the inorder traversal of a binary tree.\par
{\pntext\f0 12.\tab}Binary Tree Preorder Traversal: Implement the preorder traversal of a binary tree.\par
{\pntext\f0 13.\tab}Binary Tree Postorder Traversal: Implement the postorder traversal of a binary tree.\par
{\pntext\f0 14.\tab}Level Order Traversal: Implement the level order traversal of a binary tree.\par
{\pntext\f0 15.\tab}Height of Binary Tree: Write a function to find the height of a binary tree.\par
{\pntext\f0 16.\tab}Check Balanced Binary Tree: Write a function to check if a binary tree is balanced.\par
{\pntext\f0 17.\tab}Binary Search Tree Insertion: Implement insertion in a binary search tree.\par
{\pntext\f0 18.\tab}Binary Search Tree Deletion: Implement deletion in a binary search tree.\par
{\pntext\f0 19.\tab}Graph BFS: Implement breadth-first search (BFS) on a graph.\par
{\pntext\f0 20.\tab}Graph DFS: Implement depth-first search (DFS) on a graph.\par
}
 